{"version":3,"sources":["Components/Card/Card.js","Components/CardList/CardList.jsx","Components/SearchBox/SearchBox.js","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","getMonsters","fetch","then","response","json","users","setState","filterMonsters","e","target","value","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAgBeA,G,YAbF,SAACC,GACZ,OACE,yBAAKC,UAAU,kBACb,yBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,gCAAML,EAAMI,QAAQE,MACpB,2BAAIN,EAAMI,QAAQG,UCGTC,EAVE,SAACR,GAChB,OACE,yBAAKC,UAAU,aACZD,EAAMS,SAASC,KAAI,SAACN,GACnB,OAAO,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCMhCQ,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,2BACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCDG,E,4MAtCbC,MAAQ,CACNT,SAAU,GACVU,YAAa,I,EAOfC,YAAc,WACZC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEjB,SAAUgB,Q,EAG/CE,eAAiB,SAACC,GAChB,EAAKF,SAAS,CAAEP,YAAaS,EAAEC,OAAOC,S,kEAVtCC,KAAKX,gB,+BAaG,IAAD,EAC2BW,KAAKb,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZa,EAAmBvB,EAASwB,QAAO,SAAC7B,GAAD,OACvCA,EAAQE,KAAK4B,cAAcC,SAAShB,EAAYe,kBAGlD,OACE,yBAAKjC,UAAU,OACb,gDACA,kBAAC,EAAD,CACEY,YAAY,kBACZC,aAAciB,KAAKJ,iBAErB,kBAAC,EAAD,CAAUlB,SAAUuB,S,GAjCVI,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1ee3986b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&aize=180x180`}\r\n      />\r\n      <h2> {props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-list.css\";\r\nimport Card from \"../Card/Card.js\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => {\r\n        return <Card key={monster.id} monster={monster} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search-box.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport CardList from \"./Components/CardList/CardList.jsx\";\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n\n  componentDidMount() {\n    this.getMonsters();\n  }\n\n  getMonsters = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  };\n\n  filterMonsters = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search monsters\"\n          handleChange={this.filterMonsters}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}